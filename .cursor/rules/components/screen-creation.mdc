---
description: 
globs: src/screens/**/*.tsx
alwaysApply: false
---
# Screen Creation Patterns

## Screen Structure Template
```typescript
import React from 'react';
import { View, Text, StyleSheet, SafeAreaView, ScrollView } from 'react-native';
import { theme } from '../styles/theme';
// Import specific components as needed

const ScreenName: React.FC = () => {
  return (
    <SafeAreaView style={styles.container}>
      <View style={styles.header}>
        <Text style={styles.title}>Screen Title</Text>
        <Text style={styles.subtitle}>Optional subtitle</Text>
      </View>
      
      <ScrollView 
        style={styles.content}
        contentContainerStyle={styles.contentContainer}
        showsVerticalScrollIndicator={false}
      >
        {/* Screen content */}
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: theme.colors.background,
  },
  header: {
    padding: theme.spacing.md,
    borderBottomWidth: 1,
    borderBottomColor: theme.colors.border,
    backgroundColor: theme.colors.background,
  },
  title: {
    ...theme.typography.h1, // or h2 for secondary screens
    color: theme.colors.primary, // or theme.colors.text
    textAlign: 'center',
    marginBottom: theme.spacing.xs,
  },
  subtitle: {
    ...theme.typography.caption,
    color: theme.colors.textSecondary,
    textAlign: 'center',
  },
  content: {
    flex: 1,
  },
  contentContainer: {
    padding: theme.spacing.md,
    paddingBottom: theme.spacing.xl,
  },
});

export default ScreenName;
```

## Screen Standards
- Always use SafeAreaView as root container
- Include proper header with title/subtitle structure
- Use ScrollView for content that may overflow
- Apply consistent padding from theme
- Use proper loading and error states
- Include accessibility labels for navigation

## Navigation Integration
- Export as default for tab/stack navigation
- Use typed navigation props when needed
- Handle navigation parameters with proper typing
